@using DocViewer.Presentation.Models.Docs;
@using Markdig;
@model NewPostViewModel
@{
    ViewData["Title"] = "New Post";
}

<div class="container-flex">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>New Post</h2>
    </div>
    <form id="new-post-form" asp-action="NewPost" method="post">
        <div class="card mb-3">
            <div class="card-header">
                <div class="d-flex justify-content-between">
                    <div class="card-title w-100">
                        <div class="form-group">
                            <label for="Author">Author</label>
                            <input type="text" id="Author" class="form-control" value=@Model.Author disabled />
                        </div>
                        <div class="form-group">
                            <label for="Category">Category</label>
                            <input type="text" id="Category" class="form-control" placeholder="Enter Category" required />
                        </div>
                        <div class="form-group">
                            <label for="Desciption">Description</label>
                            <input type="text" id="Description" class="form-control" placeholder="Enter Description" required />
                        </div>
                        <div class="form-group">
                            <label for="Keywords">Keywords</label>
                            <input type="text" id="Keywords" class="form-control" placeholder="Enter Keywords" required />
                        </div>
                        <div class="form-group">
                            <label for="Title">Title</label>
                            <input type="text" id="Title" class="form-control" placeholder="Enter Title" required />
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <textarea id="Content" class="form-control" placeholder="Enter Content"></textarea>
                </div>
                <button type="submit" class="btn btn-success" id="post-button">Post</button>
            </div>
        </div>
    </form>
</div>

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet"
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/xcash/bootstrap-autocomplete@v2.3.7/dist/latest/bootstrap-autocomplete.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://getbootstrap.com/docs/5.3/assets/css/docs.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var simplemde = new SimpleMDE({
            element: document.getElementById("Content"),
            spellChecker: false,
            status: false,
        });

        simplemde.codemirror.on("drop", function (editor, event) {
            event.preventDefault();
            var files = event.dataTransfer.files;
            handleFiles(files);
        });

        simplemde.codemirror.on("paste", function (editor, event) {
            var items = (event.clipboardData || event.originalEvent.clipboardData).items;
            for (var index in items) {
                var item = items[index];
                if (item.kind === 'file') {
                    var blob = item.getAsFile();
                    handleFiles([blob]);
                }
            }
        });

        function handleFiles(files) {
            for (var i = 0; i < files.length; i++) {
                uploadFile(files[i]);
            }
        }

        function uploadFile(file) {
            var formData = new FormData();
            formData.append("file", file);

            fetch('/Docs/UploadImage', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        var cm = simplemde.codemirror;
                        var doc = cm.getDoc();
                        var cursor = doc.getCursor();
                        doc.replaceRange("![Image](" + data.url + ")", cursor);
                    } else {
                        alert("Failed to upload image");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("Failed to upload image");
                });
        }

        document.getElementById("new-post-form").addEventListener("submit", function (event) {
            event.preventDefault();

            const author = document.querySelector("#Author").value;
            const title = document.querySelector("#Title").value;
            const description = document.querySelector("#Description").value;
            const category = document.querySelector("#Category").value;
            const keywords = document.querySelector("#Keywords").value;
            const content = simplemde.value();

            const formData = {
                Title: title,
                Author: author,
                Description: description,
                Category: category,
                Keywords: keywords, 
                Content: content
            };

            fetch('/Docs/NewPost', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    return response.text().then(text => {
                        alert("Failed to post issue: " + text);
                        throw new Error("Failed to post issue: " + text);
                    });
                }
            })
            .catch(error => {
                console.error('Error posting issue', error);
            });
        });
    });
</script>